<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmt.gen.dao.SchemeDao">

  <resultMap id="BaseResult" type="com.tmt.gen.entity.Scheme">
    <result column="ID" property="id" jdbcType="BIGINT"/>
    <result column="NAME" property="name" jdbcType="VARCHAR"/>
    <result column="CATEGORY" property="category" jdbcType="VARCHAR"/>
    <result column="PACKAGE_NAME" property="packageName" jdbcType="VARCHAR"/>
    <result column="MODULE_NAME" property="moduleName" jdbcType="VARCHAR"/>
    <result column="SUB_MODULE_NAME" property="subModuleName" jdbcType="VARCHAR"/>
    <result column="FUNCTION_NAME" property="functionName" jdbcType="VARCHAR"/>
    <result column="FUNCTION_NAME_SIMPLE" property="functionNameSimple" jdbcType="VARCHAR"/>
    <result column="FUNCTION_AUTHOR" property="functionAuthor" jdbcType="VARCHAR"/>
    <result column="GEN_TABLE_ID" property="genTableId" jdbcType="BIGINT"/>
    <result column="CREATE_ID" property="createId" jdbcType="BIGINT"/>
    <result column="CREATE_NAME" property="createName" jdbcType="VARCHAR"/>
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
    <result column="UPDATE_ID" property="updateId" jdbcType="BIGINT"/>
    <result column="UPDATE_NAME" property="updateName" jdbcType="VARCHAR"/>
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP"/>
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR"/>
    <result column="DEL_FLAG" property="delFlag" jdbcType="TINYINT"/>
  </resultMap>
  
  <select id="get" resultMap="BaseResult" parameterType="long">
   SELECT ID, NAME, CATEGORY, PACKAGE_NAME, MODULE_NAME, SUB_MODULE_NAME, FUNCTION_NAME,
	      FUNCTION_NAME_SIMPLE, FUNCTION_AUTHOR, GEN_TABLE_ID, CREATE_ID, CREATE_NAME, CREATE_DATE,
	      UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG
     FROM GEN_SCHEME
    WHERE ID = #{id}
  </select>
  
  <select id="getAll" resultMap="BaseResult">
   SELECT ID, NAME, CATEGORY, PACKAGE_NAME, MODULE_NAME, SUB_MODULE_NAME, FUNCTION_NAME,
	      FUNCTION_NAME_SIMPLE, FUNCTION_AUTHOR, GEN_TABLE_ID, CREATE_ID, CREATE_NAME, CREATE_DATE,
	      UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG
     FROM GEN_SCHEME
  </select>
  
  <select id="findByCondition" resultMap="BaseResult" parameterType="queryCondition">
   SELECT ID, NAME, CATEGORY, PACKAGE_NAME, MODULE_NAME, SUB_MODULE_NAME, FUNCTION_NAME,
	      FUNCTION_NAME_SIMPLE, FUNCTION_AUTHOR, GEN_TABLE_ID, CREATE_ID, CREATE_NAME, CREATE_DATE,
	      UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG
     FROM GEN_SCHEME
    <include refid="COMMON.whereClause"/>
    <if test="orderByClause != null">ORDER BY ${orderByClause}</if>
  </select>
  
  <delete id="delete" parameterType="com.tmt.gen.entity.Scheme">
    DELETE FROM GEN_SCHEME WHERE ID = #{id}
  </delete>
  
  <insert id="insert" parameterType="com.tmt.gen.entity.Scheme">
    INSERT INTO GEN_SCHEME (ID, NAME, CATEGORY, PACKAGE_NAME, MODULE_NAME, SUB_MODULE_NAME,
      FUNCTION_NAME, FUNCTION_NAME_SIMPLE, FUNCTION_AUTHOR, GEN_TABLE_ID, CREATE_ID, CREATE_NAME,
      CREATE_DATE, UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG)
    VALUES (#{id}, #{name}, #{category}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName},
      #{functionNameSimple}, #{functionAuthor}, #{genTableId}, #{createId}, #{createName}, #{createDate}, #{updateId},
      #{updateName}, #{updateDate}, #{remarks}, #{delFlag})
  </insert>
  
  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO GEN_SCHEME (ID, NAME, CATEGORY, PACKAGE_NAME, MODULE_NAME, SUB_MODULE_NAME,
      FUNCTION_NAME, FUNCTION_NAME_SIMPLE, FUNCTION_AUTHOR, GEN_TABLE_ID, CREATE_ID, CREATE_NAME,
      CREATE_DATE, UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG)
    VALUES
   <foreach collection="list" item="item" index="index" separator="," >  
    (#{item.id}, #{item.name}, #{item.category}, #{item.packageName}, #{item.moduleName}, #{item.subModuleName}, #{item.functionName},
     #{item.functionNameSimple}, #{item.functionAuthor}, #{item.genTableId}, #{item.createId}, #{item.createName}, #{item.createDate}, #{item.updateId},
     #{item.updateName}, #{item.updateDate}, #{item.remarks}, #{item.delFlag})
   </foreach> 
  </insert>
  
  <update id="update" parameterType="com.tmt.gen.entity.Scheme">
   UPDATE GEN_SCHEME
      SET NAME = #{name},
	      CATEGORY = #{category},
	      PACKAGE_NAME = #{packageName},
	      MODULE_NAME = #{moduleName},
	      SUB_MODULE_NAME = #{subModuleName},
	      FUNCTION_NAME = #{functionName},
	      FUNCTION_NAME_SIMPLE = #{functionNameSimple},
	      FUNCTION_AUTHOR = #{functionAuthor},
	      GEN_TABLE_ID = #{genTableId},
	      UPDATE_ID = #{updateId},
	      UPDATE_NAME = #{updateName},
	      UPDATE_DATE = #{updateDate},
	      REMARKS = #{remarks},
	      DEL_FLAG = #{delFlag}
    WHERE ID = #{id}
  </update>
  
  <select id="findByConditionStat" parameterType="queryCondition" resultType="int">
    SELECT COUNT(1) FROM GEN_SCHEME D
    <include refid="COMMON.whereClause"/>
  </select>
</mapper>