<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmt.gen.dao.TableColumnDao" >

  <resultMap id="BaseResult" type="com.tmt.gen.entity.TableColumn">
    <result column="ID" property="id" jdbcType="BIGINT"/>
    <result column="GEN_TABLE_ID" property="genTableId" jdbcType="BIGINT"/>
    <result column="TABLE_NAME" property="tableName" jdbcType="VARCHAR"/>
    <result column="NAME" property="name" jdbcType="VARCHAR"/>
    <result column="COMMENTS" property="comments" jdbcType="VARCHAR"/>
    <result column="DB_TYPE" property="dbType" jdbcType="VARCHAR"/>
    <result column="JDBC_TYPE" property="jdbcType" jdbcType="VARCHAR"/>
    <result column="JAVA_TYPE" property="javaType" jdbcType="VARCHAR"/>
    <result column="JAVA_FIELD" property="javaField" jdbcType="VARCHAR"/>
    <result column="DB_LENGTH" property="length" jdbcType="DECIMAL"/>
    <result column="DB_SCALE" property="scale" jdbcType="DECIMAL"/>
    <result column="IS_PK" property="isPk" jdbcType="TINYINT"/>
    <result column="IS_NULL" property="isNull" jdbcType="TINYINT"/>
    <result column="IS_INSERT" property="isInsert" jdbcType="TINYINT"/>
    <result column="IS_EDIT" property="isEdit" jdbcType="TINYINT"/>
    <result column="IS_LIST" property="isList" jdbcType="TINYINT"/>
    <result column="IS_QUERY" property="isQuery" jdbcType="TINYINT"/>
    <result column="QUERY_TYPE" property="queryType" jdbcType="VARCHAR"/>
    <result column="SHOW_TYPE" property="showType" jdbcType="VARCHAR"/>
    <result column="DICT_TYPE" property="dictType" jdbcType="VARCHAR"/>
    <result column="CHECK_TYPE" property="checkType" jdbcType="VARCHAR"/>
    <result column="SETTINGS" property="settings" jdbcType="VARCHAR"/>
    <result column="SORT" property="sort" jdbcType="DECIMAL"/>
    <result column="CREATE_ID" property="createId" jdbcType="BIGINT"/>
    <result column="CREATE_NAME" property="createName" jdbcType="VARCHAR"/>
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
    <result column="UPDATE_ID" property="updateId" jdbcType="BIGINT" />
    <result column="UPDATE_NAME" property="updateName" jdbcType="VARCHAR"/>
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR"/>
    <result column="DEL_FLAG" property="delFlag" jdbcType="TINYINT"/>
  </resultMap>
  
  <select id="get" resultMap="BaseResult" parameterType="long">
   SELECT ID, GEN_TABLE_ID, TABLE_NAME, NAME, COMMENTS, DB_TYPE, JDBC_TYPE, JAVA_TYPE, JAVA_FIELD, IS_PK, IS_NULL,
	      IS_INSERT, IS_EDIT, IS_LIST, IS_QUERY, QUERY_TYPE, SHOW_TYPE, DICT_TYPE, SETTINGS, SORT,
	      CREATE_ID, CREATE_NAME, CREATE_DATE, UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG,
	      DB_LENGTH, DB_SCALE, CHECK_TYPE
     FROM GEN_TABLE_COLUMN
    WHERE ID = #{id}
  </select>
  
  <select id="findTableColumns" resultMap="BaseResult" parameterType="long" >
   SELECT ID, GEN_TABLE_ID, TABLE_NAME, NAME, COMMENTS, DB_TYPE, JDBC_TYPE, JAVA_TYPE, JAVA_FIELD, IS_PK, IS_NULL,
	      IS_INSERT, IS_EDIT, IS_LIST, IS_QUERY, QUERY_TYPE, SHOW_TYPE, DICT_TYPE, SETTINGS, SORT,
	      CREATE_ID, CREATE_NAME, CREATE_DATE, UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG,
	      DB_LENGTH, DB_SCALE, CHECK_TYPE
     FROM GEN_TABLE_COLUMN
    WHERE GEN_TABLE_ID = #{VALUE}
  </select>
  
  <select id="getAll" resultMap="BaseResult">
   SELECT ID, GEN_TABLE_ID, TABLE_NAME, NAME, COMMENTS, DB_TYPE, JDBC_TYPE, JAVA_TYPE, JAVA_FIELD, IS_PK, IS_NULL,
	      IS_INSERT, IS_EDIT, IS_LIST, IS_QUERY, QUERY_TYPE, SHOW_TYPE, DICT_TYPE, SETTINGS, SORT,
	      CREATE_ID, CREATE_NAME, CREATE_DATE, UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG,
	      DB_LENGTH, DB_SCALE, CHECK_TYPE
     FROM GEN_TABLE_COLUMN
  </select>
  
  <select id="findByCondition" resultMap="BaseResult" parameterType="queryCondition" >
   SELECT ID, GEN_TABLE_ID, TABLE_NAME, NAME, COMMENTS, DB_TYPE, JDBC_TYPE, JAVA_TYPE, JAVA_FIELD, IS_PK, IS_NULL,
	      IS_INSERT, IS_EDIT, IS_LIST, IS_QUERY, QUERY_TYPE, SHOW_TYPE, DICT_TYPE, SETTINGS, SORT,
	      CREATE_ID, CREATE_NAME, CREATE_DATE, UPDATE_ID, UPDATE_NAME, UPDATE_DATE, REMARKS, DEL_FLAG,
	      DB_LENGTH, DB_SCALE, CHECK_TYPE
     FROM GEN_TABLE_COLUMN
    <include refid="COMMON.whereClause"/>
    <if test="orderByClause != null">ORDER BY ${orderByClause}</if>
  </select>
  
  <delete id="delete" parameterType="com.tmt.gen.entity.TableColumn" >
    DELETE FROM GEN_TABLE_COLUMN WHERE ID = #{id}
  </delete>
  
  <insert id="insert" parameterType="com.tmt.gen.entity.TableColumn" >
    INSERT INTO GEN_TABLE_COLUMN (ID, GEN_TABLE_ID, TABLE_NAME, NAME, COMMENTS, DB_TYPE, JDBC_TYPE, 
      JAVA_TYPE, JAVA_FIELD, IS_PK, IS_NULL, IS_INSERT, IS_EDIT, IS_LIST, IS_QUERY, QUERY_TYPE, SHOW_TYPE,
      DICT_TYPE, SETTINGS, SORT, CREATE_ID, CREATE_NAME, CREATE_DATE, UPDATE_ID, UPDATE_NAME,
      UPDATE_DATE, REMARKS, DEL_FLAG, DB_LENGTH, DB_SCALE, CHECK_TYPE)
    VALUES (#{id}, #{genTableId}, #{tableName}, #{name}, #{comments}, #{dbType}, #{jdbcType}, #{javaType}, #{javaField}, #{isPk}, #{isNull},
      #{isInsert}, #{isEdit}, #{isList}, #{isQuery}, #{queryType}, #{showType},  #{dictType}, #{settings}, #{sort}, #{createId}, #{createName}, #{createDate}, 
      #{updateId}, #{updateName}, #{updateDate}, #{remarks}, #{delFlag}, #{length}, #{scale}, #{checkType})
  </insert>
  
  <insert id="batchInsert" parameterType="java.util.List">
   INSERT INTO GEN_TABLE_COLUMN (ID, GEN_TABLE_ID, TABLE_NAME, NAME, COMMENTS, DB_TYPE, JDBC_TYPE, 
      JAVA_TYPE, JAVA_FIELD, IS_PK, IS_NULL, IS_INSERT, IS_EDIT, IS_LIST, IS_QUERY, QUERY_TYPE, SHOW_TYPE,
      DICT_TYPE, SETTINGS, SORT, CREATE_ID, CREATE_NAME, CREATE_DATE, UPDATE_ID, UPDATE_NAME,
      UPDATE_DATE, REMARKS, DEL_FLAG, DB_LENGTH, DB_SCALE, CHECK_TYPE)
    VALUES
   <foreach collection="list" item="item" index="index" separator="," >  
    (#{item.id}, #{item.genTableId}, #{item.tableName}, #{item.name}, #{item.comments}, #{item.dbType}, #{item.jdbcType}, #{item.javaType}, #{item.javaField}, #{item.isPk}, #{item.isNull},
     #{item.isInsert}, #{item.isEdit}, #{item.isList}, #{item.isQuery}, #{item.queryType}, #{item.showType}, #{item.dictType}, #{item.settings}, #{item.sort}, #{item.createId}, #{item.createName}, #{item.createDate}, 
     #{item.updateId}, #{item.updateName}, #{item.updateDate}, #{item.remarks}, #{item.delFlag}, #{item.length}, #{item.scale}, #{item.checkType})
   </foreach> 
  </insert>
  
  <update id="update" parameterType="com.tmt.gen.entity.TableColumn" >
   UPDATE GEN_TABLE_COLUMN
      SET GEN_TABLE_ID = #{genTableId},
          TABLE_NAME = #{tableName},
	      NAME = #{name},
	      COMMENTS = #{comments},
	      DB_TYPE = #{dbType},
	      JDBC_TYPE = #{jdbcType},
	      JAVA_TYPE = #{javaType},
	      JAVA_FIELD = #{javaField},
	      IS_PK = #{isPk},
	      IS_NULL = #{isNull},
	      IS_INSERT = #{isInsert},
	      IS_EDIT = #{isEdit},
	      IS_LIST = #{isList},
	      IS_QUERY = #{isQuery},
	      QUERY_TYPE = #{queryType},
	      SHOW_TYPE = #{showType},
	      DICT_TYPE = #{dictType},
	      SETTINGS = #{settings},
	      SORT = #{sort},
	      UPDATE_ID = #{updateId},
	      UPDATE_NAME = #{updateName},
	      UPDATE_DATE = #{updateDate},
	      REMARKS = #{remarks},
	      DEL_FLAG = #{delFlag},
	      DB_LENGTH = #{length},
	      DB_SCALE = #{scale},
	      CHECK_TYPE = #{checkType}
    WHERE ID = #{id}
  </update>
  
  <select id="findByConditionStat" parameterType="queryCondition" resultType="int" >
    SELECT COUNT(1) FROM GEN_TABLE_COLUMN D
    <include refid="COMMON.whereClause" />
  </select>
  
  <!-- 物理表 -->
  <resultMap id="DbBaseResult" type="com.tmt.gen.entity.TableColumn" >
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
    <result column="DB_TYPE" property="dbType" jdbcType="VARCHAR" />
    <result column="IS_PK" property="isPk" jdbcType="TINYINT" />
    <result column="IS_DB_NULL" property="isDbNull" jdbcType="TINYINT" />
    <result column="SORT" property="sort" jdbcType="INTEGER" />
    <result column="NUMERIC_PRECISION" property="length" jdbcType="DECIMAL" />
    <result column="NUMERIC_SCALE" property="scale" jdbcType="DECIMAL" />
  </resultMap>
  
  <select id="findDbTableColumns" resultMap="DbBaseResult" parameterType="java.util.Map">
  SELECT T.COLUMN_NAME AS NAME, (CASE WHEN T.COLUMN_KEY = 'PRI' THEN '1' ELSE '0' END) AS IS_PK,
         (CASE WHEN T.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS IS_DB_NULL,
		 (T.ORDINAL_POSITION * 10) AS SORT, T.COLUMN_COMMENT AS COMMENTS, T.COLUMN_TYPE AS DB_TYPE,
		 (CASE WHEN T.CHARACTER_MAXIMUM_LENGTH IS NULL THEN T.NUMERIC_PRECISION ELSE T.CHARACTER_MAXIMUM_LENGTH END) NUMERIC_PRECISION,
		 T.NUMERIC_SCALE
    FROM INFORMATION_SCHEMA.COLUMNS T 
   WHERE T.TABLE_SCHEMA = (SELECT DATABASE())
     AND T.TABLE_NAME = upper(#{tableName})
     <if test="name != null">AND T.COLUMN_NAME LIKE CONCAT('%',upper(#{name}),'%')</if>  
   ORDER BY T.ORDINAL_POSITION
  </select>
  
  <select id="findDbTableColumnsStat" resultType="int" parameterType="java.util.Map">
  SELECT COUNT(1) C
    FROM INFORMATION_SCHEMA.COLUMNS T 
   WHERE T.TABLE_SCHEMA = (SELECT DATABASE())
     AND T.TABLE_NAME = upper(#{tableName})
     <if test="name != null">AND T.COLUMN_NAME LIKE CONCAT('%',upper(#{name}),'%')</if>  
  </select>
  
</mapper>