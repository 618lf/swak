/**
 * jquery.tagsinput.min.js 改进而来
 * 
 * @param $
 */
(function($) {
	
	//分隔符
	var delimiter = new Array();
	$.fn.tagsInput = function(options){
		var that = $(this);
		var settings = jQuery.extend({
			width:'300px',
		    height:'auto',
		    'hide':true,
		    'delimiter':',',
		    'unique':true,
		    autosize: true,
		    inputPadding: 6*2
		},options);
		that.each(function(){
			if (settings.hide) { 
				$(this).hide();				
			}
			var id = $(this).attr('id');
			if (!id || delimiter[$(this).attr('id')]) {
				id = $(this).attr('id', 'tags' + new Date().getTime()).attr('id');
			}
			var data = jQuery.extend({
				pid:id,
				real_input: '#'+id,
				holder: '#'+id+'_tagsinput',
				input_wrapper: '#'+id+'_addTag',
				fake_input: '#'+id+'_tag',
				searcher: '#'+id+'_tagssearcher'
			},settings);
			delimiter[id] = data.delimiter;
			
            var markup = '<div id="'+id+'_tagsinput" class="tagsinput"><div id="'+id+'_addTag">';
                markup = markup + '</div><div id="'+id+'_tagssearcher" class="tagssearcher">';
			    markup = markup + '</div><div class="tags_clear"></div></div>';
			//加入文档
			$(markup).insertAfter(this);
			$(data.holder).css('width',settings.width);
			//$(data.holder).css('min-height',settings.height);
			$(data.holder).css('height',settings.height);
			//tags
			if ($(data.real_input).val()!='') {
				$.fn.tagsInput.importTags($(data.real_input));
			}
			//searcher
			if( !!settings.searcherF && typeof(settings.searcherF) == 'function' ) {
				$(data.searcher).bind('click',data,function(event) {
					settings.searcherF.call($(data.real_input));
				});
			}
		});
	};
	$.fn.tagsInput.importTags = function(obj,tagIds,tagNams) {
		var ids = tagIds||$(obj).val();
		var names =  tagNams||$(obj).attr('data-tags');
		$(obj).val('');
		$(obj).attr('data-tags','');
		var id = $(obj).attr('id');
		var tags = ids.split(delimiter[id]);
		var tagNames = names.split(delimiter[id]);
		for (i=0; i<tags.length; i++) { 
			$(obj).addTag(tags[i],tagNames[i],{focus:false,callback:false});
		}
		$(obj).parent().children('.tags').val($(obj).attr('data-tags'));
	};
	$.fn.tagsInput.updateTagsField = function(obj,tags,tagNames) { 
		var id = $(obj).attr('id');
		$(obj).val(tags.join(delimiter[id]));
		$(obj).attr('data-tags',tagNames.join(delimiter[id]));
	};
	//添加Tag
	$.fn.addTag = function(tagId,tagName,options) {
		options = jQuery.extend({focus:false,callback:true},options);
		this.each(function() { 
			var id = $(this).attr('id');
			var values = $(this).val();
			var names =  $(this).attr('data-tags');
			var tags = values.split(delimiter[id]);
			var tagNames = names.split(delimiter[id]);
			if (tags[0] == '') {  tags = new Array();}
			if (tagNames[0] == '') {  tagNames = new Array();}
			tagId = jQuery.trim(tagId);
			tagName = jQuery.trim(tagName);
			if ( tagId!='' && tagName !='') { 
				$('<span>').addClass('tag').append(
                    $('<span>').text(tagName).append('&nbsp;&nbsp;'),
                    $('<a>', {
                        href  : 'javascript:void(0)',
                        title : 'Removing tag',
                        text  : 'x',
                        'data-id': tagId
                    }).click(function () {
                        return $('#' + id).removeTag(escape(tagId));
                    })
                ).insertBefore('#' + id + '_addTag');
			}
			tags.push(tagId);
			tagNames.push(tagName);
			$.fn.tagsInput.updateTagsField(this,tags,tagNames);
		});
	};
	$.fn.removeTag = function(tagId) {
		tagId = unescape(tagId);
		this.each(function() { 
			 var id = $(this).attr('id');
			 var oldIds = $(this).val();
			 var oldNames =  $(this).attr('data-tags');
			 var tags = oldIds.split(delimiter[id]);
			 var tagNames = oldNames.split(delimiter[id]);
			 $('#'+id+'_tagsinput .tag').remove();
			 var ids = '',names ='';
			 for(i=0; i< tags.length; i++) { 
				if ( tags[i] != tagId ) { 
					ids += delimiter[id]+ "" + tags[i];
					names += delimiter[id]+ "" + tagNames[i];
				}
			 }
			 $(this).val(ids);
			 $(this).attr('data-tags',names);
			 $.fn.tagsInput.importTags(this);
		});
	};
	
})(jQuery);